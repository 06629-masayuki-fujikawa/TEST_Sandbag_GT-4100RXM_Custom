/***********************************************************************/
/*                                                                     */
/*  FILE        :rx630_rtc_readwrite.h                                 */
/*  DATE        :Fri, Dec 16, 2011                                     */
/*  DESCRIPTION :Aliases of Integer Type                               */
/*  CPU TYPE    :RX630                                                 */
/*                                                                     */
/*  This file is generated by Renesas Project Generator (Ver.4.53).    */
/*  NOTE:THIS IS A TYPICAL EXAMPLE.                                    */
/*                                                                     */
/***********************************************************************/
#ifndef _RTC_READ_WRITE_H_
#define _RTC_READ_WRITE_H_
/*********************************************************************
*
* Device     : RX
*
* File Name  : typedefine.h
*
* Abstract   : Aliases of Integer Type.
*
* History    : 1.00  (2009-08-07)
*
* NOTE       : THIS IS A TYPICAL EXAMPLE.
*
* Copyright (C) 2009 Renesas Electronics Corporation.
* and Renesas Solutions Corporation. All rights reserved.
*
*********************************************************************/
#define		RTC_RW_SIZE				8		// RTC時計データサイズ
#define		RTC_FR_SIZE				1		// RTC FLAG レジスタサイズ
#define		RTC_CR_SIZE				1		// RTC CTRL レジスタサイズ
#define		RTC_EX_SIZE				1		// RTC EXT  レジスタサイズ
#define		RTC_EX_FR_CR_SIZE		3		// RTC (EXT FLAG CTRL)レジスタサイズ
#define		RTC_FR_CR_SIZE			(RTC_CR_SIZE+RTC_FR_SIZE)		// RTC (FLAG CTRL)レジスタサイズ

#define		RTC_EX_INIT				0x20	// TEST		WADA	USEL	TE		FSEL1	FSEL0	TSEL1	TSEL0
#define		RTC_FR_INIT				0x00	// ---		---		UF		TF		AF		EVF		VLF		VDET
#define		RTC_CR_INIT				0x60	// CSEL1	CSEL0	UIE		TIE		AIE		EIE		---		RESET
#define		RTC_CR_RESET			0x01	// CSEL1	CSEL0	UIE		TIE		AIE		EIE		---		RESET

#define		RTC_READ_NON_QUE		0x00
#define		RTC_READ_QUE_OPE		0x01

struct	RTC_rec {
	unsigned char	freq100sec; // 1/100sec(BCD)
	unsigned char	sec;		// sec(BCD)
	unsigned char	min;		// min(BCD)
	unsigned char	hour;		// hour(BCD)
	unsigned char	week;		// week
	unsigned char	day;		// day(BCD)
	unsigned char	month;		// month(BCD)
	unsigned char	year;		// sec(BCD)
	unsigned char	min_alarm;	// min alarm(BCD)		:未使用
	unsigned char	hour_alarm;	// hour alarm(BCD)		:未使用
	unsigned char	hw_alarm;	// hour/week alarm		:未使用
	unsigned char	tim_cnt0;	// TimerCounter0		:未使用
	unsigned char	tim_cnt1;	// TimerCounter1		:未使用
	unsigned char	ex_reg;		// extention register	:未使用
	unsigned char	flag_reg;	// flag register		:未使用
	unsigned char	ctrl_reg;	// ctrl register		:未使用
};

extern struct	RTC_rec 	RTC_CLOCK;

extern unsigned char DBG_RtcTimeForceWritecFlag;

typedef	union{
	unsigned char	BYTE;
	struct{
		unsigned char	RESERVE:6;		// Bit 2-7 = 予備
		unsigned char	RTC_VLF:1;		// Bit 1 = VLF(発振回路電圧低下)の場合
		unsigned char	RTC_VDET:1;		// Bit 0 = VDET(温度補償回路電圧低下)の場合
	} BIT;
}t_RTC_ERR;

extern t_RTC_ERR 	RTC_Err;

#endif	// _RTC_READ_WRITE_H_
