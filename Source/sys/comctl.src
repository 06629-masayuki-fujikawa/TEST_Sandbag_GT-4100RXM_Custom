;********************************************************************************
;*		ei			I-bit <- 1(全割込みEnable:他のbitは保持)					*
;*		di			I-bit <- 0(全割込みDisable:他のbitは保持)					*
;*		ei2			Parameter(R1:32bit)==0以外 -> I-bit <- 1(全割込みEnable)	*
;*		di2			現在のI-bitの状態を0(DI)し現在のI-bitの状態を返す			*
;*		wait2u		2us x Parameter(R1:32bit)回数のwaitを行う					*
;*		wait1u		1usのwaitを行う												*
;*																				*
;*		本File内ではRX630のSFR操作は行わない為									*
;*		RX630のiodefine.hをｱｾﾝﾌﾞﾗ定義した"RX630_iodef.INC"は使用しない			*
;*		(現時点12/20では"RX630_iodef.INC"は未作成)								*
;********************************************************************************
;    .INCLUDE    "RX630_iodef.INC"

	.SECTION  P,CODE
	.GLB __ei
	.GLB __di
	.GLB __ei2
	.GLB __di2
	.GLB _wait2us
	.GLB _wait1us
;/*[]----------------------------------------------------------------------[]*/
;/*| _ei()                                                                  |*/
;/*[]----------------------------------------------------------------------[]*/
;/*| MODULE NAME  : _ei                                                     |*/
;/*| PARAMETER    : void                                                    |*/
;/*| RETURN VALUE : void                                                    |*/
;/*[]----------------------------------------------------------------------[]*/
;/*| Author       : A.Iiizumi                                               |*/
;/*| Date         : 2012-01-16                                              |*/
;/*[]------------------------------------- Copyright(C) 2012 AMANO Corp.---[]*/
;void _ei( void )
;
;********************************************************
;*	I-bit <- 1(全割込みEnable:他のbitは保持)			*
;*	I-bit = bit16, PSW = 32bit							*
;********************************************************
__ei:
	PUSH.L	R6
	MVFC    PSW,R6
	OR      #00010000h:32,R6  ; I(bit16) <- 1(EI)
	MVTC    R6,PSW
	POP	R6
	RTS
;/*[]----------------------------------------------------------------------[]*/
;/*| _di()                                                                  |*/
;/*[]----------------------------------------------------------------------[]*/
;/*| MODULE NAME  : _di                                                     |*/
;/*| PARAMETER    : void                                                    |*/
;/*| RETURN VALUE : void                                                    |*/
;/*[]----------------------------------------------------------------------[]*/
;/*| Author       : A.Iiizumi                                               |*/
;/*| Date         : 2012-01-16                                              |*/
;/*[]------------------------------------- Copyright(C) 2012 AMANO Corp.---[]*/
;void char _di( void )
;
;*****************************************************************************
;*      I-bit <- 0(全割込みDisable:他のbitは保持)                            *
;*****************************************************************************
__di:
	PUSH.L	R6
	MVFC    PSW,R6
	AND     #0FFFEFFFFh:32,R6  ; I(bit16) <- 0(DI)
	MVTC    R6,PSW
	POP	R6
	RTS

;/*[]----------------------------------------------------------------------[]*/
;/*| _ei2()                                                                 |*/
;/*[]----------------------------------------------------------------------[]*/
;/*| MODULE NAME  : _ei2                                                    |*/
;/*| PARAMETER    : uchar : =0:nothing is done, =1:enable                   |*/
;/*| RETURN VALUE : void                                                    |*/
;/*[]----------------------------------------------------------------------[]*/
;/*| Author       : A.Iiizumi                                               |*/
;/*| Date         : 2012-01-16                                              |*/
;/*[]------------------------------------- Copyright(C) 2001 AMANO Corp.---[]*/
;unsigned long _ei2( unsigned long )
;
;****************************************************************************
;*      Parameter(R1:32bit)==0以外 -> I-bit <- 1(全割込みEnable)            *
;*      PARAMETER    : R1 : =0:nothing is done, = 1:enable	            *
;*      RETURN VALUE : none                                                 *
;*      di2()で受け取った値を引数にし、引数の値が0の時は前回の状態が割り込み*
;*      禁止のため何もしない                                                *
;****************************************************************************
__ei2:
	OR	R1,R1
	BEQ.B   __ei2010
	MVFC    PSW,R1
	OR      #00010000h:32,R1  ; I(bit16) <- 1(EI)
	MVTC    R1,PSW
__ei2010:
	RTS

;/*[]----------------------------------------------------------------------[]*/
;/*| _di2()                                                                 |*/
;/*[]----------------------------------------------------------------------[]*/
;/*| MODULE NAME  : _di2                                                    |*/
;/*| PARAMETER    : void                                                    |*/
;/*| RETURN VALUE : uchar : current interrupt status =0:enable =1:disable   |*/
;/*[]----------------------------------------------------------------------[]*/
;/*| Author       : A.Iiizumi                                               |*/
;/*| Date         : 2012-01-16                                              |*/
;/*[]------------------------------------- Copyright(C) 2001 AMANO Corp.---[]*/
;unsinged char _di2( void )
;
;****************************************************************************
;*      現在のI-bitの状態を0(DI)し現在のI-bitの状態を返す                   *
;*      PARAMETER    : none                                                 *
;*      RETURN VALUE : R1 : current interrupt status = 1:enable =0:disable  *
;*      割り込み禁止前の割込禁止/許可フラグの状態を保持し返り値で返す       *
;*      この値はei2()で使用する                                             *
;****************************************************************************
__di2:
	PUSH.L	R6
	MVFC  	PSW,R1
	AND		#00010000h:32,R1 	; R1 <= current interrupt status
	MVFC	PSW,R6
	AND		#0FFFEFFFFh:32,R6 	; I(bit16) <- 0(DI)
	MVTC	R6,PSW
	POP	R6
	RTS

;/*[]----------------------------------------------------------------------[]*/
;/*|    wait2us(R1)  :  CPU = RX630 100.000MHz                              |*/
;/*[]----------------------------------------------------------------------[]*/
;/*|             wait (R1)*2 usec                                           |*/
;/*[]----------------------------------------------------------------------[]*/
;/*| Argument :  ( R1) = timer value : 1=2us, 2=4us, 3=6us, ...             |*/
;/*[]----------------------------------------------------------------------[]*/
;/*| Outline  :                                                             |*/
;/*[]----------------------------------------------------------------------[]*/
;/*| Author      :  A.Iiizumi                                               |*/
;/*| Date        :  2012-01-16                                              |*/
;/*[]------------------------------------- Copyright(C) 2012 AMANO Corp.---[]*/
;CPUのマニュアルに実行ステートの記載がないため実測により決定
;R6は関数呼び出しの前後でレジスタ値が保証される仕様
							; MOV.L 	#xx:32,ER0
							; JSR 		@_wait2us
_wait2us:				; 
	PUSH.L	R6			; 
WAT023:	
	SUB    #1,R1			; 
	BEQ.W  WAT020 		  	; 
					; 
	MOV.L  #20:32,R6                ;
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
WAT022:	
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	SUB	#1,R6			; 
	BNE.W	WAT022 		  	; 
	BRA.W   WAT023 		  	; 
                                        ;
WAT020:					; 
	MOV.L  #20:32,R6                ;
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
;	NOP				; 
WAT021:	
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	SUB	#1,R6			; 
	BNE.W	WAT021 		  	; 
	POP	R6			; 
	RTS				; 


;/*[]----------------------------------------------------------------------[]*/
;/*| wait1us      :  CPU = RX630 100.000MHz                                 |*/
;/*|                                                                        |*/
;/*[]----------------------------------------------------------------------[]*/
;/*| MODULE NAME  : _wait1us                                                |*/
;/*| PARAMETER    : void                                                    |*/
;/*| RETURN VALUE : void                                                    |*/
;/*[]----------------------------------------------------------------------[]*/
;/*| Outline      :                                                         |*/
;/*[]----------------------------------------------------------------------[]*/
;/*| Author       : A.Iiizumi                                               |*/
;/*| Date         : 2012-01-16                                              |*/
;/*[]------------------------------------- Copyright(C) 2012 AMANO Corp.---[]*/
;CPUのマニュアルに実行ステートの記載がないため実測により決定
					; JSR 	@_wait1us
_wait1us:
	PUSH.L	R6			; 
	MOV.L	#10:32,R6
	NOP				; 
	NOP				; 
WAT010:	
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	NOP				; 
	SUB	#1,R6			; 
	BNE.W	WAT010 		  	; 
	POP	R6			; 
	RTS				; 

	.END

